@{
    Layout = null;
}

<!--右侧实体内容-->
<div id="partPage">
    <!--表格實體-->
    <el-table :data="tableData" stripe border
                v-loading="showLoading"
                element-loading-text="数据加载中"
                element-loading-spinner="el-icon-loading"
                element-loading-background="rgba(0, 0, 0, 0.8)">
        <el-table-column prop="TaskId" label="流水号"></el-table-column>
        <el-table-column prop="FlowName" label="审批类型"></el-table-column>
        <el-table-column prop="Title" label="标题"></el-table-column>
        <el-table-column prop="ApplyMan" label="申请人"></el-table-column>
        <el-table-column prop="ApplyTime" label="申请时间"></el-table-column>
        <el-table-column v-if="Index != '0'" prop="State" label="状态"></el-table-column>
        <el-table-column label="操作">
            <template slot-scope="scope">
                <el-button size="mini" v-on:click="handleEdit(scope.$index, scope.row)">详情</el-button>
                @*<el-button size="mini" type="danger" v-on:click="handleDelete(scope.$index, scope.row)">同意</el-button>*@
            </template>
        </el-table-column>
    </el-table>
    <!--底部翻頁-->
    <div style="text-align:right">
        <el-pagination v-on:size-change="handleSizeChange"
                       v-on:current-change="handleCurrentChange"
                       :current-page="currentPage"
                       :page-sizes="[1, 3, 5, 10]"
                       :page-size="5"
                       layout="total, sizes, prev, pager, next, jumper"
                       :total="totalRows">
        </el-pagination>
    </div>
</div>


<script>
    var Index = 0
    var VUE = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                showLoading: true,
                data: [],
                tableData: [],
                currentPage: 1,
                totalRows: 0,
                superSearch: false,
                Index: UrlObj.Index,
                formInline: {
                    user: '',
                    region: '',
                    startDate: '',
                    endDate: '',
                    state:0
                },
                items: { TaskId: '审批编号' ,ApplyMan:'审批人'}
            }
        },
        methods: {
            //查詢相關頁面
            onFilter() {
                console.log(this.formInline)
            },
            //切换高级搜索
            changeSuperSearch() {
                this.superSearch = !this.superSearch;
            },
            //获取审批列表
            getApproveList() {
                var that = this 
                $.ajax({
                    url: 'FlowInfo/GetFlowStateDetail?Index=' + Index + '&ApplyManId=' + DingData.userid,
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        console.log('FlowInfo/GetFlowStateDetail?Index=' + Index + '&ApplyManId=' + DingData.userid)
                        console.log(data)
                        for (let d of data) {
                            that.data.push(d[0])
                        }
                        that.showLoading = false
                        //that.tableData = data
                        that.getData()
                        that.totalRows = data.length
                    },
                    error: function (err) {
                        console.error(err)
                    }
                })
            },
            //表单操作
            handleEdit(index, row) {
                console.log(index, row);
                var that = this
                if (Index == '3') {
                    var url = '/FlowInfo/ChangeSendState?TaskId=' + row.TaskId + '&UserId=' + DingData.userid
                    $.ajax({
                        url: url, 
                        success: function (data) {
                            console.log('设置抄送审批为已读')
                            console.log(url)
                            console.log(data)
                            that.loader(row)
                        }
                    })
                } else {
                    this.loader(row)
                }
            },
            loader(row) {
                if (row.TaskId && row.FlowId) {
                    let param = {
                        taskid: row.TaskId,
                        flowid: row.FlowId,
                        nodeid: row.NodeId,
                        id: row.Id,
                        index: Index,
                        state: row.State
                    }

                    //零部件采购
                    if (row.FlowId == 24) {
                        loadPage('/Main/approval_purchase' + _formatQueryStr(param))
                        return
                    }


                    if (row.FlowId == 7) {
                        loadPage('/Main/approval_detail2' + _formatQueryStr(param))
                        return
                    }
                    if (row.FlowId == 12) {
                        loadPage('/Main/approval_meterieCode' + _formatQueryStr(param))
                        return
                    }
                    if (row.FlowId == 13) {
                        loadPage('/Main/approval_usePublicCar' + _formatQueryStr(param))
                        return
                    }
                    if (row.FlowId == 14) {
                        loadPage('/Main/approval_useCar' + _formatQueryStr(param))
                        return
                    }
                    if (row.FlowId == 17) {
                        loadPage('/Main/approval_workOvertime' + _formatQueryStr(param))
                        return
                    }
                    if (row.FlowId == 18) {
                        loadPage('/Main/approval_officePurchase' + _formatQueryStr(param))
                        return
                    }
                    if (row.FlowId == 19) {
                        loadPage('/Main/approval_sendRead' + _formatQueryStr(param))
                        return
                    }
                    loadPage('/Main/approval_detail' + _formatQueryStr(param))
                }
            },
            handleDelete(index, row) {
                console.log(index, row);
            }
        },
        created: function () {
            console.log('UrlObj')
            console.log(UrlObj)
            Index = UrlObj.Index
            this.getApproveList()
            loadHtml("mainPage", "partPage")
        }
    })


</script>