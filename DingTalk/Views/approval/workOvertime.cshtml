@{
    Layout = null;
}

<!--右侧实体内容-->
<el-main id="partPage" style="position:relative;">
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        加班申请-{{nodeInfo.NodeName}}
    </div>
    <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="120px" class="demo-ruleForm">

        <el-form-item label="标题" prop="Title">
            <el-input v-model="ruleForm.Title"></el-input>
        </el-form-item>
        <el-form-item label="加班人员" prop="name">
            <el-input v-model="ruleForm.name" style="width:200px;" :disabled="true"></el-input>
        </el-form-item>

        <el-form-item label="加班事由" prop="OverTimeContent">
            <el-input v-model="ruleForm.OverTimeContent" style="width:90%;"></el-input>
        </el-form-item>

        <hr />

        <el-form-item label="加班日期" prop="DateTime">
            <div class="block">
                <el-date-picker v-model="ruleForm.DateTime"
                                type="date"
                                value-format="yyyy-MM-dd"
                                placeholder="选择日期"
                                align="right">
                </el-date-picker>
            </div>
        </el-form-item>


        <el-form-item label="加班时间" prop="StartTime">
            <el-time-select placeholder="起始时间"
                            v-model="ruleForm.StartTime"
                            :picker-options="{
                              start: '08:30',
                              step: '00:30',
                              end: '23:00',
                              maxTime: ruleForm.EndTimeTime
                            }">
            </el-time-select>
            <el-time-select placeholder="结束时间"
                            v-model="ruleForm.EndTimeTime"
                            :picker-options="{
                              start: '08:30',
                              step: '00:30',
                              end: '23:30',
                              minTime: ruleForm.StartTime
                            }">
        </el-form-item>
        <el-form-item label="加班时长(小时)">
            <el-input v-model="UseTime" style="width:200px;" :disabled="true"></el-input>
        </el-form-item>
        <hr />

        <!--添加审批人-->
        <sam-approver-list :nodeList="nodeList" :single="true" :nodedata="nodeInfo"></sam-approver-list>

        <el-form-item>
            <el-button type="primary" v-on:click="onSubmit('ruleForm')">提交</el-button>
            <el-button v-on:click="resetForm('ruleForm')">重置</el-button>
        </el-form-item>
    </el-form>
</el-main>

<script>
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                nodeList: [],
                nodeInfo: {},
                ruleForm: {
                    TaskId: '',
                    StartTime: '',
                    Title: "加班申请",
                    name: DingData.nickName,
                    OverTimeContent: '',
                    EndTimeTime: '',
                    UseTime: '',
                    DateTime: ''
                }
            }
        },
        methods: {
            onSubmit(formName) {
                var that = this
                let url = '/OverTimeTable/OverTimeTableSave'
                var param = _cloneObj(this.ruleForm)
                param.UseTime = this.UseTime
                let callBack = function (taskId) {
                    console.log(taskId)
                    param.TaskId = taskId
                    console.log(JSON.stringify(param))
                    that._postData(url, function (data) {
                        that.$alert('恭喜提交成功', '提示信息', {
                            confirmButtonText: '确定',
                            callback: action => {
                                goHome()
                            }
                        })
                    }, param)
                }
                this.approvalSubmit(formName, { Title: this.ruleForm.Title }, callBack)
            }
        },
        created: function () {
            this.getNodeInfo()
            this.getApproInfo()
            loadHtml("mainPage", "partPage")
        },
        computed: {
            UseTime: function () {
                let StartTime = this.ruleForm.StartTime
                let EndTimeTime = this.ruleForm.EndTimeTime
                let startHour = parseInt(StartTime.split(':')[0])
                let startMinut = parseInt(StartTime.split(':')[1])
                let endHour = parseInt(EndTimeTime.split(':')[0])
                let endMinut = parseInt(EndTimeTime.split(':')[1])
                if (StartTime >= '13:30' || (StartTime <= '12:00' && EndTimeTime <= '12:00')) {
                    return _computedTime(startHour, startMinut, endHour, endMinut)
                } else {
                    if (endMinut < 30) {
                        endMinut += 60
                        endHour --
                    }
                    endHour--
                    endMinut -= 30
                    return _computedTime(startHour, startMinut, endHour, endMinut)
                }
            }
        }
    })


</script>



