@{
    Layout = null;
}

<!--右侧实体内容-->
<el-main id="partPage" style="position:relative;">
    <!--标题-->
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        办公用品采购-{{nodeInfo.NodeName}}
    </div>
    <!--搜索-->
    <div style="margin-bottom:10px;">
        <span style="color:red">*</span><span style="padding:3px;">日期</span>
        <el-date-picker v-model="searchDate"
                        type="daterange"
                        :picker-options="pickerOptions"
                        value-format="yyyy-MM-dd"
                        range-separator="至"
                        start-placeholder="开始日期"
                        end-placeholder="结束日期">
        </el-date-picker>
        <el-button type="primary" v-on:click="searchCode">搜索</el-button>
    </div>
    <!--物料列表表格實體-->
    <el-collapse v-model="activeNames">
        <el-collapse-item v-for="(d,i) in dataList" :name="i+1" :key="i">
            <template slot="title">
                <span style="font-size:20px;">部门名称:{{d.name}}</span>
            </template>
            <el-table :data="d.value" stripe border>
                <el-table-column prop="CodeNo" label="物料编码"></el-table-column>
                <el-table-column prop="Name" label="物料名称"></el-table-column>
                <el-table-column prop="Standard" label="规格型号"></el-table-column>
                <el-table-column prop="Unit" label="单位"></el-table-column>
                <el-table-column prop="Price" label="实际单价"></el-table-column>
                <el-table-column prop="Count" label="数量"></el-table-column>
                <el-table-column prop="applyMan" label="申请人"></el-table-column>
                @*<el-table-column prop="dept" label="部门"></el-table-column>*@
                <el-table-column prop="Mark" label="备注"></el-table-column>
                <el-table-column prop="ExpectPrice" label="参考单价">
                    <template slot-scope="scope">
                        <el-input v-model="scope.row.ExpectPrice"
                                  :class="{ redborder:scope.row.ExpectPrice ==''}"></el-input>
                    </template>
                </el-table-column>
            </el-table>
        </el-collapse-item>
    </el-collapse>

    <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm"
             id="uploadForm" enctype="multipart/form-data">

        <el-form-item label="标题" prop="Title">
            <el-input v-model="ruleForm.Title"></el-input>
        </el-form-item>
        <el-form-item label="申请人" prop="name">
            <el-input v-model="ruleForm.name" :disabled="true"></el-input>
        </el-form-item>
        <el-form-item label="备注" prop="remark">
            <el-input v-model="ruleForm.remark"></el-input>
        </el-form-item>
        <!--添加审批人-->
        <sam-approver-list :nodeList="nodeList" :single="true" :nodedata="nodeInfo"></sam-approver-list>
        <el-form-item>
            <el-button type="primary" v-on:click="onSubmit('ruleForm')" :disabled="disablePage">提交申请</el-button>
        </el-form-item>
    </el-form>
</el-main>

<script>
    NodeId = '0'
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                data: [],
                dataList: [],
                tableData: [],
                searchDate:[],
                preApprove: false,
                nodeList: [],
                nodeInfo: {},
                searchForm: {
                    name: '',
                },
                activeNames: [1, 2, 3, 4, 5, 6],
                ruleForm: {
                    name: DingData.nickName,
                    remark: '',
                    ProjectName: '',
                    Title: '办公用品采购',
                    ProjectId: null,
                    inputProjectName: '',
                    inputProjectId: '',
                    Time: ''
                },
                preApprover: false
            }
        },
        methods: {
            onSubmit(formName) {
                var that = this
                if (that.data.length == 0) {
                    this.elementAlert('提示信息', '没有采购数据')
                    return
                }
                for (let d of that.dataList) {
                    for (let v of d.value) {
                        if (v.ExpectPrice == '') {
                            this.elementAlert('提示信息', '有预计单价未填')
                            return
                        }
                    }
                }
                let url = '/OfficeSuppliesPurchase/SaveTable'
                let callBack = function (taskId) {
                    console.log(taskId)
                    var param = []
                    for (let d of that.dataList) {
                        for (let v of d.value) {
                            v.TaskId = taskId
                            param.push(v)
                        }
                    }
                    console.log(JSON.stringify(param))
                    that._postData(url, function (data) {
                        that.$alert('恭喜提交成功', '提示信息', {
                            confirmButtonText: '确定',
                            callback: action => {
                                goHome()
                            }
                        })
                    }, param)
                }
                that.approvalSubmit(formName, {
                    Title: that.ruleForm.Title,
                    Remark: that.ruleForm.remark
                }, callBack)
            },
            //搜索列表
            searchCode(formName) {
                var that = this
                if (!this.searchDate[0]) return
                //this.$refs[formName].validate((valid) => {
                //    if (valid) {
                var url = '/OfficeSuppliesPurchase/GetTable?startTime=' + that.searchDate[0] + '&endTime=' + that.searchDate[1] + ' 23:59:59'
                $.ajax({
                    url: url,
                    success: function (data) {
                        console.log(url)
                        console.log(data)
                        that.data = data
                        that.dataList = []
                        var deptList = []
                        var deptStr = ''
                        for (let d of data) {
                            if (d.dept && deptStr.indexOf(d.dept) < 0) {
                                deptStr = deptStr + d.dept + ','
                            }
                        }
                        deptStr = deptStr.substring(0, deptStr.length - 1)
                        deptList = deptStr.split(',')
                        console.log(deptList)
                        for (let d of deptList) {
                            that.dataList.push({
                                name: d,
                                value: []
                            })
                        }
                        for (let d of data) {
                            for (let l of that.dataList) {
                                if (d.dept == l.name) {
                                    l.value.push(d)
                                    break
                                }
                            }
                        }

                        that.totalRows = data.length
                        that.getData()
                    }
                })
            }
        },
        created: function () {
            this.getNodeInfo()
            this.getProjects()
            this.getApproInfo()
            loadHtml("mainPage", "partPage")

        }
    })

</script>



