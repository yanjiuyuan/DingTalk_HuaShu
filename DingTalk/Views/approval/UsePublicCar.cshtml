@{
    Layout = null;
}

<!--右侧实体内容-->
<el-main id="partPage" style="position:relative;">
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        公车申请-{{nodeInfo.NodeName}}
    </div>
    <el-form :model="ruleForm" :rules="rules" :inline="true" ref="ruleForm" label-width="120px" class="demo-ruleForm">

        <el-form-item label="标题" prop="Title">
            <el-input v-model="ruleForm.Title"></el-input>
        </el-form-item>
        <el-form-item label="申请人">
            <el-input v-model="applyMan" style="width:200px;" :disabled="true"></el-input>
        </el-form-item>
        <el-form-item label="驾驶员" prop="DrivingMan">
            <el-input v-model="ruleForm.DrivingMan" style="width:200px;" :disabled="true"></el-input>
            <el-button class="button-new-tag" size="small" v-on:click="addDrivingMan()">+ 选人</el-button>
        </el-form-item>
        <el-form-item label="同行人">
            <el-input v-model="ruleForm.PeerNumber" style="width:500px;" :disabled="true"></el-input>
            <el-button class="button-new-tag" size="small" v-on:click="addPeerNumber()">+ 选人</el-button>
        </el-form-item>

        <el-form-item label="用车事由" prop="MainContent">
            <el-input v-model="ruleForm.MainContent" style="width:550px;"></el-input>
        </el-form-item>

        <hr />

        <el-form-item label="计划行车路线" prop="PlantTravelWay">
            <el-input v-model="ruleForm.PlantTravelWay" style="width:550px;"></el-input>
        </el-form-item>

        @*<el-form-item label="起始公里数" prop="StartKilometres">
            <el-input v-model="ruleForm.StartKilometres"></el-input>
        </el-form-item>*@

        <el-form-item label="用车时间" prop="StartTime">
            <el-date-picker v-model="timeRange"
                            type="datetimerange"
                            v-on:change="selectTime"
                            @*:picker-options="dayPickerOptions"*@
                            range-separator="至"
                            start-placeholder="开始时间"
                            end-placeholder="返回时间">
            </el-date-picker>
        </el-form-item>

        <el-form-item label="车辆选择" prop="PlantTravelWay">
            <el-select v-model="ruleForm.CarId" v-on:change="selectCar" filterable placeholder="请选择">
                <el-option v-for="item in carList"
                           :key="item.Id"
                           :label="item.Name"
                           :value="item.Id">
                </el-option>
            </el-select>
            <template v-if="CarObj && CarObj.IsOccupyCar">
                <span style="color:red;">当前被占用,占用情况如下</span>
                <p v-for="u in useTimeList">
                    <span>驾驶员:{{u.name}}</span>
                    <span>占用时间:{{u.time}}</span>
                </p>
            </template>
        </el-form-item>

        <hr />

        <!--添加审批人-->
        <sam-approver-list :nodeList="nodeList" :single="true" :nodedata="nodeInfo"></sam-approver-list>
        <el-form-item>
            <el-button type="primary" v-on:click="onSubmit('ruleForm')">提交</el-button>
            <el-button v-on:click="resetForm('ruleForm')">重置</el-button>
        </el-form-item>
    </el-form>
</el-main>

<script>
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                applyMan: DingData.nickName,
                carList: [],
                nodeList: [],
                nodeInfo: {},
                timeRange: [],
                useTimeList: [],
                ruleForm: {
                    CarId: "",
                    DrivingMan: "",
                    PeerNumber: "",
                    StartTime: "",
                    EndTime: "",
                    MainContent: "",
                    PlantTravelWay: "",
                    Title: "公车申请",
                    IsPublicCar: true,
                    IsChooseOccupyCar: true,
                    OccupyCarId: ""
                },
                rules: {
                    DrivingMan: { required: true, message: '申请人不能为空', trigger: 'blur' },
                    PeerNumber: { required: true, message: '同行人不能为空', trigger: 'blur' },
                    MainContent: { required: true, message: '用车事由不能为空', trigger: 'blur' },
                    PlantTravelWay: { required: true, message: '计划路线不能为空', trigger: 'blur' },
                    startAddress: { required: true, message: '始发地点不能为空', trigger: 'blur' },
                    StartTime: { required: true, message: '用车时间不能为空', trigger: 'blur' },
                    EndTime: { required: true, message: '返回时间不能为空', trigger: 'blur' }
                },
                dayPickerOptions: {
                    shortcuts: [
                        {
                            text: '今天',
                            onClick(picker) {
                                picker.$emit('pick', new Date());
                            }
                        }, {
                            text: '明天',
                            onClick(picker) {
                                const date = new Date();
                                date.setTime(date.getTime() + 3600 * 1000 * 24);
                                picker.$emit('pick', date);
                        }
                    }]
                }
            }
        },
        methods: {
            onSubmit(formName) {
                console.log('submit!');
                var that = this
                let url = '/CarTable/TableSave'
                var param = _cloneObj(this.ruleForm)
                if (this.CarObj.IsOccupyCar) param['OccupyCarId'] = this.CarObj.OccupyCarId
                let callBack = function (taskId) {
                    console.log(taskId)
                    param.TaskId = taskId
                    console.log(JSON.stringify(param))
                    that._postData(url, function (data) {
                        that.$alert('恭喜提交成功', '提示信息', {
                            confirmButtonText: '确定',
                            callback: action => {
                                goHome()
                            }
                        })
                    },param)
                }
                this.approvalSubmit(formName, { Title: this.ruleForm.Title }, callBack)
            },
            //选车操作
            selectCar(value) {
                //value = JSON.parse(value)
                console.log('选车操作')
                console.log(value)
                let car = {}
                this.useTimeList = []
                for (let c of this.carList) {
                    if (c.Id == value) {
                        car = c
                        if (!c.UseMan) break
                        let nameList = c.UseMan.split(',')
                        let timeList = c.UseTimes.split(',')
                        for (var i = 0; i < nameList.length; i++) {
                            this.useTimeList.push({
                                name: nameList[i],
                                time: timeList[i]
                            })
                        }
                    }
                }
                this.ruleForm.CarId = car.Id
                this.ruleForm.OccupyCarId = car.OccupyCarId
                this.ruleForm.IsChooseOccupyCar = car.IsChooseOccupyCar
            },
            //选时间操作
            selectTime(value) {
                if (!value[0]) return
                var that = this
                let url = '/CarMananger/QuaryByTime'
                this.ruleForm.StartTime = _timeToString(value[0])
                this.ruleForm.EndTime = _timeToString(value[1])
                let param = {
                    startTime: _timeToString(value[0]),
                    endTime: _timeToString(value[1])
                }
                let callBack = function (data) {
                    that.carList = data
                    if (data && data.length > 0) {
                        that.selectCar(data[0].Id)
                    }
                    console.log('选时间操作')
                }
                this._getData(url, callBack, param)
            },
            //添加用车人
            addDrivingMan() {
                var that = this
                DingTalkPC.biz.contact.choose({
                    users: [],
                    multiple: false,
                    corpId: DingData.CorpId,
                    max: 10,
                    onSuccess: function (data) {
                        console.log(data)
                        that.ruleForm.DrivingMan = data[0].name
                    },
                    onFail: function (err) { }
                });
            },
            //添加同行人
            addPeerNumber() {
                var that = this
                DingTalkPC.biz.contact.choose({
                    users: [],
                    corpId: DingData.CorpId,
                    max: 10,
                    onSuccess: function (data) {
                        console.log(data)
                        let names = []
                        for (let d of data) names.push(d.name)
                        that.ruleForm.PeerNumber = names.join(',')
                    },
                    onFail: function (err) { }
                });
            }
        },
        created: function () {
            this.getNodeInfo()
            this.getApproInfo()
            loadHtml("mainPage", "partPage")
        },
        computed: {
            CarObj: function () {
                for (let car of this.carList) {
                    if (car.Id == this.ruleForm.CarId)
                        return car
                }
            }
        }
    })


</script>



